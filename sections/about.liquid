<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.theme.default.min.css">
<section class="fruits_card_section">
  <div class="container">
    <div class="fruits_card_section_in">
      <div class="head">
        <div class="left">
          <h2>{{ section.settings.heading }}</h2>
          <p>{{ section.settings.subheading }}</p>
        </div>
        <div class="right">
          <a href="{{ section.settings.collection.url }}">Explore Fresh Picks, Just In</a>
        </div>
      </div>
      <div class="fruits_cards_wrapper for_desktop">
        {% assign collection = section.settings.collection %}
        {% for product in collection.products limit: 4 %}
         {% render 'product-card-primary', product: product, collection: collection %}
        {% else %}
          <p>There are no products inside of this collection.</p>
        {% endfor %}
      </div>
    </div>
  </div>
   <div class="fruits_cards_slider slider_container for_responsive">
    <div class="owl-carousel">
     {% assign collection = section.settings.collection %}
        {% for product in collection.products limit: 4 %}
         {% render 'product-card-primary', product: product, collection: collection %}
        {% else %}
          <p>There are no products inside of this collection.</p>
        {% endfor %}
    </div>
  </div>
</section>
{% schema %}
{
  "name": "Fruits Cards Section",
  "settings": [
    {
      "type": "collection",
      "id": "collection",
      "label": "Select Collection"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Section Heading"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Section Subheading"
    }
  ]
}
{% endschema %}

<script>
  $(document).ready(function () {
    $('.fruits_cards_slider .owl-carousel').owlCarousel({
      loop: true,
      margin: 20,
      nav: true,
      autoplayTimeout: 3000,
      navText: [
        '<button class="custom-prev"><svg height="18px" width="18px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 185.343 185.343" style="transform: rotate(180deg);"><g><path style="fill:#fff;" d="M51.707,185.343c-2.741,0-5.493-1.044-7.593-3.149c-4.194-4.194-4.194-10.981,0-15.175l74.352-74.347L44.114,18.32c-4.194-4.194-4.194-10.987,0-15.175c4.194-4.194,10.987-4.194,15.18,0l81.934,81.934c4.194,4.194,4.194,10.987,0,15.175l-81.934,81.939C57.201,184.293,54.454,185.343,51.707,185.343z"/></g></svg></button>',
        '<button class="custom-next"><svg height="18px" width="18px" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 185.343 185.343"><g><path style="fill:#fff;" d="M51.707,185.343c-2.741,0-5.493-1.044-7.593-3.149c-4.194-4.194-4.194-10.981,0-15.175l74.352-74.347L44.114,18.32c-4.194-4.194-4.194-10.987,0-15.175c4.194-4.194,10.987-4.194,15.18,0l81.934,81.934c4.194,4.194,4.194,10.987,0,15.175l-81.934,81.939C57.201,184.293,54.454,185.343,51.707,185.343z"/></g></svg></button>',
      ],
      responsive: {
        0: {
          items: 1.3,
        },
        480: {
          items: 1.5,
        },
        767: {
          items: 2.2,
        },
        991: {
          items: 2.6,
        },
        1100: {
          items: 3.3,
        },
        1300: {
          items: 3.5,
        },
      },
    });
  });
</script>

<script>
document.addEventListener("DOMContentLoaded", function() {
  function initVariantDropdown() {
    // Only for screens up to 767px
    if (window.innerWidth > 767) return;

    // Target all product cards inside .fruits_cards_slider.for_responsive
    const productCards = document.querySelectorAll('.fruits_cards_slider.for_responsive .product-card-primary');

    productCards.forEach(card => {
      const variantWrap = card.querySelector('.fc_variant_wrap');
      const variants = card.querySelectorAll('.fc_variant_item');
      const dropdown = card.querySelector('.selected_variant_dropdown');
      if (!variantWrap || !variants.length || !dropdown) return;

      // Prevent duplicate initialization
      if (card.classList.contains('dropdown-initialized')) return;
      card.classList.add('dropdown-initialized');

      // Create a new div for showing the selected variant
      let selectedVariantDiv = card.querySelector('.selected_product_variant');
      if (!selectedVariantDiv) {
        selectedVariantDiv = document.createElement('div');
        selectedVariantDiv.classList.add('selected_product_variant');
        dropdown.appendChild(selectedVariantDiv);
      }

      // Initially show only the active variant in the new div
      const active = variantWrap.querySelector('.fc_variant_item.active');
      if (active) selectedVariantDiv.innerHTML = active.outerHTML;

      // Hide the variant list initially
      variantWrap.style.display = 'none';

      // Toggle open/close on click of selected variant div
      selectedVariantDiv.addEventListener('click', function() {
        const isOpen = variantWrap.style.display === 'block';
        variantWrap.style.display = isOpen ? 'none' : 'block';
        selectedVariantDiv.classList.toggle('open', !isOpen);
      });

      // When a variant is clicked, make it active and update the selected div
      variants.forEach(v => {
        v.addEventListener('click', function() {
          variants.forEach(el => el.classList.remove('active'));
          this.classList.add('active');
          selectedVariantDiv.innerHTML = this.outerHTML;
          variantWrap.style.display = 'none';
          selectedVariantDiv.classList.remove('open');
        });
      });
    });
  }

  // Run once on load (only ≤767px)
  if (window.innerWidth <= 767) {
    initVariantDropdown();
  }

  // Handle resize events — only activate/deactivate when crossing 767px
  let wasMobile = window.innerWidth <= 767;

  window.addEventListener('resize', function() {
    const isMobile = window.innerWidth <= 767;

    // If switching from desktop to mobile, initialize
    if (!wasMobile && isMobile) {
      initVariantDropdown();
    }

    // If switching from mobile to desktop, reset everything
    if (wasMobile && !isMobile) {
      document.querySelectorAll('.fc_variant_wrap').forEach(el => el.style.display = '');
      document.querySelectorAll('.selected_variant_dropdown').forEach(el => el.innerHTML = '');
      document.querySelectorAll('.dropdown-initialized').forEach(el => el.classList.remove('dropdown-initialized'));
    }

    wasMobile = isMobile;
  });
});
</script>


